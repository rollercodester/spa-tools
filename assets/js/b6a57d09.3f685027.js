"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[8100],{7481:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>j,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=t(7458),s=t(7996),r=t(5207);const a={title:"jsonStringify",pagination_label:"Data Utilities: jsonStringify",pagination_next:"utilities/data/looks-like-base64",pagination_prev:"utilities/data/is-record",sidebar_label:"jsonStringify",slug:"/utilities/data/json-stringify"},o="jsonStringify()",l={id:"utilities/data/json-stringify",title:"jsonStringify",description:"The JSON.stringify() method is a great way to encode JavaScript objects into",source:"@site/docs/utilities/data/json-stringify.mdx",sourceDirName:"utilities/data",slug:"/utilities/data/json-stringify",permalink:"/spa-tools/utilities/data/json-stringify",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"jsonStringify",pagination_label:"Data Utilities: jsonStringify",pagination_next:"utilities/data/looks-like-base64",pagination_prev:"utilities/data/is-record",sidebar_label:"jsonStringify",slug:"/utilities/data/json-stringify"},sidebar:"docs",previous:{title:"Date Utilities: isRecord",permalink:"/spa-tools/utilities/data/is-record"},next:{title:"Date Utilities: looksLikeBase64",permalink:"/spa-tools/utilities/data/looks-like-base64"}},d={},c=[{value:"Usage",id:"usage",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3}];function h(e){const i={code:"code",em:"em",h1:"h1",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.D_,{packageName:"@spa-tools/utilities"}),"\n",(0,n.jsx)(i.h1,{id:"jsonstringify",children:"jsonStringify()"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"JSON.stringify()"})," method is a great way to encode JavaScript objects into\nstrings; however, it fails if the object contains a circular reference or a\n",(0,n.jsx)(i.code,{children:"BigInt"})," value."]}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"jsonStringify()"})," method is a drop-in replacement (sans ",(0,n.jsx)(i.code,{children:"replacer"})," function)\nthat ",(0,n.jsx)(i.em,{children:"gracefully"})," handles these cases."]}),"\n",(0,n.jsx)(i.h3,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-ts",children:'import { jsonStringify } from \'@spa-tools/utilities\';\n\nconst objWithBigInt = {\n  a: 1,\n  b: \'2\',\n  c: BigInt(3),\n  d: {\n    e: 4,\n    f: \'5\',\n  },\n};\nconsole.log(jsonStringify(objWithBigInt));\n// --\x3e {"a":1,"b":"2","c":3,"d":{"e":4,"f":"5"}}\n\nconst objWithCircularRef = {\n  a: 1,\n  b: \'2\',\n};\nobjWithCircularRef.c = objWithCircularRef;\nconsole.log(jsonStringify(objWithCircularRef));\n// --\x3e {"a":1,"b":"2"}\n'})}),"\n",(0,n.jsx)(i.h3,{id:"arguments",children:"Arguments"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Name"}),(0,n.jsx)(i.th,{children:"Type"}),(0,n.jsx)(i.th,{children:"Required?"}),(0,n.jsx)(i.th,{children:"Default"}),(0,n.jsx)(i.th,{children:"Description"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"obj"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"unknown"})}),(0,n.jsx)(i.td,{children:"yes"}),(0,n.jsx)(i.td,{children:"-"}),(0,n.jsx)(i.td,{children:"The object to stringify"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"space"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"string | number"})}),(0,n.jsx)(i.td,{children:"no"}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"''"})}),(0,n.jsx)(i.td,{children:"A string or number that's used to insert white space (including indentation, line break characters, etc.) into the output JSON string for readability purposes."})]})]})]}),"\n",(0,n.jsx)(i.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"string"}),": The JSON string representation of the object."]})]})}function j(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);