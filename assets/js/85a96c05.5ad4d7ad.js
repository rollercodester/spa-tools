"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[954],{4555:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>a,toc:()=>l});var r=t(7458),s=t(7996),i=t(5207);const d={title:"roundToNearest",pagination_label:"Number Utilities: roundToNearest",pagination_next:"utilities/numbers/shift-decimal-places",pagination_prev:"utilities/numbers/humanize-unit",sidebar_label:"roundToNearest",slug:"/utilities/numbers/round-to-nearest"},o="roundToNearest()",a={id:"utilities/numbers/round-to-nearest",title:"roundToNearest",description:"Have you ever needed to round a number without having it returned as a formatted string? Beyond having",source:"@site/docs/utilities/numbers/round-to-nearest.mdx",sourceDirName:"utilities/numbers",slug:"/utilities/numbers/round-to-nearest",permalink:"/spa-tools/utilities/numbers/round-to-nearest",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"roundToNearest",pagination_label:"Number Utilities: roundToNearest",pagination_next:"utilities/numbers/shift-decimal-places",pagination_prev:"utilities/numbers/humanize-unit",sidebar_label:"roundToNearest",slug:"/utilities/numbers/round-to-nearest"},sidebar:"docs",previous:{title:"Number Utilities: humanizeUnit",permalink:"/spa-tools/utilities/numbers/humanize-unit"},next:{title:"Number Utilities: shiftDecimalPlaces",permalink:"/spa-tools/utilities/numbers/shift-to-decimal-places"}},u={},l=[{value:"Usage",id:"usage",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3}];function c(e){const n={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.D_,{packageName:"@spa-tools/utilities"}),"\n",(0,r.jsx)(n.h1,{id:"roundtonearest",children:"roundToNearest()"}),"\n",(0,r.jsxs)(n.p,{children:["Have you ever needed to round a number without having it returned as a formatted string? Beyond having\nto figure out when to use which, both ",(0,r.jsx)(n.code,{children:"toPrecision()"})," and ",(0,r.jsx)(n.code,{children:"toFixed()"})," return a ",(0,r.jsx)(n.code,{children:"string"}),". And while ",(0,r.jsx)(n.code,{children:"Math.round()"}),"\nreturns a number, it only rounds to the nearest whole number, effectively returning an integer."]}),"\n",(0,r.jsxs)(n.p,{children:["This is where ",(0,r.jsx)(n.code,{children:"roundToNearest()"})," comes in to save the day by rounding a number to the nearest specified\nnumber of decimal places while still returning a ",(0,r.jsx)(n.code,{children:"number"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { roundToNearest } from '@spa-tools/utilities';\n\nconst roundedNumber1 = roundToNearest(1.2345, 2);\nconsole.log(roundedNumber1);\n// --\x3e 1.23\n\nconst roundedNumber2 = roundToNearest(1.2345, 3);\nconsole.log(roundedNumber2);\n// --\x3e 1.235\n"})}),"\n",(0,r.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required?"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"num"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"yes"}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"The number to round"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"decimalPlaces"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:"no"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0"})}),(0,r.jsx)(n.td,{children:"The decimal places to round to"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:["Returns rounded number as a ",(0,r.jsx)(n.code,{children:"number"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);