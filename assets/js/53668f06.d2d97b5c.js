"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[7786],{8023:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>x,frontMatter:()=>l,metadata:()=>a,toc:()=>d});var r=s(7458),i=s(7996),o=s(5207);const l={title:"rgbaToHex",pagination_label:"Color Utilities: rgbaToHex",pagination_next:"utilities/colors/shade",pagination_prev:"utilities/colors/parse-color",sidebar_label:"rgbaToHex",slug:"/utilities/colors/rgba-to-hex"},n="rgbaToHex",a={id:"utilities/colors/rgba-to-hex",title:"rgbaToHex",description:"The rgbaToHex function converts an rgba color string to a hex color string.",source:"@site/docs/utilities/colors/rgba-to-hex.mdx",sourceDirName:"utilities/colors",slug:"/utilities/colors/rgba-to-hex",permalink:"/spa-tools/utilities/colors/rgba-to-hex",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"rgbaToHex",pagination_label:"Color Utilities: rgbaToHex",pagination_next:"utilities/colors/shade",pagination_prev:"utilities/colors/parse-color",sidebar_label:"rgbaToHex",slug:"/utilities/colors/rgba-to-hex"},sidebar:"docs",previous:{title:"Color Utilities: parseColor",permalink:"/spa-tools/utilities/colors/parse-color"},next:{title:"Color Utilities: shade",permalink:"/spa-tools/utilities/colors/shade"}},c={},d=[{value:"Usage",id:"usage",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3}];function h(e){const t={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.D_,{packageName:"@spa-tools/utilities"}),"\n",(0,r.jsx)(t.h1,{id:"rgbatohex",children:"rgbaToHex"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"rgbaToHex"})," function converts an rgba color string to a hex color string."]}),"\n",(0,r.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { rgbaToHex } from '@spa-tools/utilities';\n\nconst hexColor = rgbaToHex('rgba(255, 0, 0, 0.5)');\nconsole.log(hexColor);\n// --\x3e '#ff000080'\n"})}),"\n",(0,r.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Required?"}),(0,r.jsx)(t.th,{children:"Default"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rgba"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{children:"yes"}),(0,r.jsx)(t.td,{children:"-"}),(0,r.jsx)(t.td,{children:"RGBA color string"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"opacity"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"number"})}),(0,r.jsx)(t.td,{children:"no"}),(0,r.jsx)(t.td,{children:"1"}),(0,r.jsx)(t.td,{children:"Opacity color value"})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"string"})," - The color in hex format."]})]})}function x(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);