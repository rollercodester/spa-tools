"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[9758],{860:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var s=i(7458),n=i(7996),o=i(5207);const a={title:"omit",pagination_label:"Data Utilities: omit",pagination_next:"utilities/data/pick",pagination_prev:"utilities/data/looks-like-base64",sidebar_label:"omit",slug:"/utilities/data/omit"},r="omit()",l={id:"utilities/data/omit",title:"omit",description:"The omit() function is similar to the TypeScript Omit utility type, but it is used",source:"@site/docs/utilities/data/omit.mdx",sourceDirName:"utilities/data",slug:"/utilities/data/omit",permalink:"/spa-tools/utilities/data/omit",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"omit",pagination_label:"Data Utilities: omit",pagination_next:"utilities/data/pick",pagination_prev:"utilities/data/looks-like-base64",sidebar_label:"omit",slug:"/utilities/data/omit"},sidebar:"docs",previous:{title:"Date Utilities: looksLikeBase64",permalink:"/spa-tools/utilities/data/looks-like-base64"},next:{title:"Data Utilities: pick",permalink:"/spa-tools/utilities/data/pick"}},d={},c=[{value:"Usage",id:"usage",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3}];function h(t){const e={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.D_,{packageName:"@spa-tools/utilities"}),"\n",(0,s.jsx)(e.h1,{id:"omit",children:"omit()"}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"omit<T>()"})," function is similar to the TypeScript ",(0,s.jsx)(e.code,{children:"Omit"})," utility type, but it is used\nat runtime to return a new object with one or more properties omitted from the provided object."]}),"\n",(0,s.jsxs)(e.p,{children:["The generic ",(0,s.jsx)(e.code,{children:"T"})," type is used to define the type of the object that is omitted from."]}),"\n",(0,s.jsx)(e.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"import { omit } from '@spa-tools/utilities';\n\nconst person = {\n  address: {\n    city: 'New York',\n    country: 'USA',\n  },\n  childrenAges: [8, 10],\n  id: 1,\n  name: 'John',\n};\n\nconst newPerson = omit(person, 'id', 'childrenAges');\nconsole.log(newPerson);\n// --\x3e\n// {\n//   address: {\n//     city: 'New York',\n//     country: 'USA'\n//   },\n//   name: 'John'\n// }\n"})}),"\n",(0,s.jsx)(e.h3,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Name"}),(0,s.jsx)(e.th,{children:"Type"}),(0,s.jsx)(e.th,{children:"Description"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"obj"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"T"})}),(0,s.jsx)(e.td,{children:"The object to omit from"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"...keys"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"string[]"})}),(0,s.jsx)(e.td,{children:"A param list of keys to omit"})]})]})]}),"\n",(0,s.jsx)(e.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(e.p,{children:["Returns object as type of ",(0,s.jsx)(e.code,{children:"Omit<T, keyof T>"}),"."]})]})}function u(t={}){const{wrapper:e}={...(0,n.a)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(h,{...t})}):h(t)}}}]);