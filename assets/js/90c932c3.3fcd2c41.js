"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[4970],{4356:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var n=s(7458),i=s(7996),l=s(5207);const a={title:"areDatesEqual",pagination_label:"Conditional Utilities: areDatesEqual",pagination_next:"utilities/conditionals/inline-switch",pagination_prev:"utilities/colors/tone",sidebar_label:"areDatesEqual",slug:"/utilities/conditionals/are-dates-equal"},r="areDatesEqual()",o={id:"utilities/conditionals/are-dates-equal",title:"areDatesEqual",description:"The areDatesEqual() function checks if two date values are equal at given level",source:"@site/docs/utilities/conditionals/are-dates-equal.mdx",sourceDirName:"utilities/conditionals",slug:"/utilities/conditionals/are-dates-equal",permalink:"/spa-tools/utilities/conditionals/are-dates-equal",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"areDatesEqual",pagination_label:"Conditional Utilities: areDatesEqual",pagination_next:"utilities/conditionals/inline-switch",pagination_prev:"utilities/colors/tone",sidebar_label:"areDatesEqual",slug:"/utilities/conditionals/are-dates-equal"},sidebar:"docs",previous:{title:"Color Utilities: tone",permalink:"/spa-tools/utilities/colors/tone"},next:{title:"Conditional Utilities: inlineSwitch",permalink:"/spa-tools/utilities/conditionals/inline-switch"}},d={},c=[{value:"Usage",id:"usage",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3}];function u(e){const t={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(l.D_,{packageName:"@spa-tools/utilities"}),"\n",(0,n.jsx)(t.h1,{id:"aredatesequal",children:"areDatesEqual()"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"areDatesEqual()"})," function checks if two date values are equal at given level\nof precision where values can be date object, timestamp integer, or date string."]}),"\n",(0,n.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"import { areDatesEqual } from '@spa-tools/utilities';\n\nconst date1 = new Date('2021-01-01');\nconst date2 = new Date('2021-01-01');\n\nconst result = areDatesEqual(date1, date2);\nconsole.log(result); // true\n\nconst result2 = areDatesEqual(date1, '2021-01-01');\nconsole.log(result2); // true\n\nconst result3 = areDatesEqual(date1, 1609459200000);\nconsole.log(result3); // true\n\nconst result4 = areDatesEqual('2021-01-01', 1609459200000);\nconsole.log(result4); // true\n\nconst result5 = areDatesEqual('2021-01-01', '2021-01-01');\nconsole.log(result5); // true\n\nconst result6 = areDatesEqual('2021-01-01', '2021-01-02');\nconsole.log(result6); // false\n\nconst result7 = areDatesEqual('2021-01-01', '2021-01-01', 'minute');\nconsole.log(result7); // true\n\nconst result8 = areDatesEqual('2021-01-01 12:30:00 PM', '2021-01-01 12:32:00 PM', 'hour');\nconsole.log(result8); // true\n\nconst result8 = areDatesEqual('2021-01-01 12:30:00 PM', '2021-01-01 12:32:00 PM', 'minute');\nconsole.log(result8); // false\n"})}),"\n",(0,n.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Required?"}),(0,n.jsx)(t.th,{children:"Default"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"date1"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"string | number | Date"})}),(0,n.jsx)(t.td,{children:"yes"}),(0,n.jsx)(t.td,{children:"-"}),(0,n.jsx)(t.td,{children:"The first date value to compare"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"date2"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"string | number | Date"})}),(0,n.jsx)(t.td,{children:"yes"}),(0,n.jsx)(t.td,{children:"-"}),(0,n.jsx)(t.td,{children:"The second date value to compare"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"precision"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"'hour' | 'minute' | 'second' | 'millisecond'"})}),(0,n.jsx)(t.td,{children:"no"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"'millisecond'"})}),(0,n.jsx)(t.td,{children:"The smallest precision to use when comparing the dates"})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"boolean"})," - If both date values are equal, considering given ",(0,n.jsx)(t.code,{children:"precision"})," then returns ",(0,n.jsx)(t.code,{children:"true"})," else returns ",(0,n.jsx)(t.code,{children:"false"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}}}]);