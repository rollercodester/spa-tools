"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[4594],{2061:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>a,default:()=>x,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var l=i(7458),d=i(7996),n=i(5207);const s={title:"downloadFile",pagination_label:"Data Utilities: downloadFile",pagination_next:"utilities/data/get-nested-value",pagination_prev:"utilities/data/download-csv-file",sidebar_label:"downloadFile",slug:"/utilities/data/download-file"},a="downloadFile()",o={id:"utilities/data/download-file",title:"downloadFile",description:"The downloadFile() takes content and programmatically downloads it from within",source:"@site/docs/utilities/data/download-file.mdx",sourceDirName:"utilities/data",slug:"/utilities/data/download-file",permalink:"/spa-tools/utilities/data/download-file",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"downloadFile",pagination_label:"Data Utilities: downloadFile",pagination_next:"utilities/data/get-nested-value",pagination_prev:"utilities/data/download-csv-file",sidebar_label:"downloadFile",slug:"/utilities/data/download-file"},sidebar:"docs",previous:{title:"Data Utilities: downloadCsvFile",permalink:"/spa-tools/utilities/data/download-csv-file"},next:{title:"Data Utilities: getNestedValue",permalink:"/spa-tools/utilities/data/get-nested-value"}},r={},c=[{value:"Usage",id:"usage",level:3},{value:"Arguments",id:"arguments",level:3}];function h(e){const t={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.D_,{packageName:"@spa-tools/utilities"}),"\n",(0,l.jsx)(t.h1,{id:"downloadfile",children:"downloadFile()"}),"\n",(0,l.jsxs)(t.p,{children:["The ",(0,l.jsx)(t.code,{children:"downloadFile()"})," takes content and programmatically downloads it from within\nthe user's browser."]}),"\n",(0,l.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-ts",children:"import { downloadFile } from '@spa-tools/utilities';\n\n// simplest usage where provided text content is downloaded as a text file\ndownloadFile('Hello, World!', 'hello.txt', 'text');\n\n// downloading a file via a URL is also pretty simple\ndownloadFile(\n  'https://example-files.online-convert.com/document/txt/example.txt',\n  'downloaded-example-text-file.txt',\n  'url'\n);\n\n// downloading a blob is also a snap, especially if\n// you already have the blob in-hand\nconst imageResponse = await fetch(\n  'https://fastly.picsum.photos/id/28/4928/3264.jpg?hmac=GnYF-RnBUg44PFfU5pcw_Qs0ReOyStdnZ8MtQWJqTfA'\n);\nconst imageBlob = await imageResponse.blob();\ndownloadFile(imageBlob, 'stream-landscape.jpg', 'blob');\n"})}),"\n",(0,l.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{children:"Name"}),(0,l.jsx)(t.th,{children:"Type"}),(0,l.jsx)(t.th,{children:"Required?"}),(0,l.jsx)(t.th,{children:"Default"}),(0,l.jsx)(t.th,{children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"source"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"string[] | Blob"})}),(0,l.jsx)(t.td,{children:"yes"}),(0,l.jsx)(t.td,{children:"-"}),(0,l.jsx)(t.td,{children:"The file's source to download."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"fileName"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"string"})}),(0,l.jsx)(t.td,{children:"yes"}),(0,l.jsx)(t.td,{children:"-"}),(0,l.jsx)(t.td,{children:"The name to be used for the downloaded file"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"type"})}),(0,l.jsx)(t.td,{children:(0,l.jsx)(t.code,{children:"'blob' | 'text' | 'url'"})}),(0,l.jsx)(t.td,{children:"yes"}),(0,l.jsx)(t.td,{children:"-"}),(0,l.jsxs)(t.td,{children:["Determines the source mechanism for downloaded file. If ",(0,l.jsx)(t.code,{children:"'blob'"})," then the source type must be a ",(0,l.jsx)(t.code,{children:"Blob"}),"; otherwise source type will be ",(0,l.jsx)(t.code,{children:"string"})]})]})]})]})]})}function x(e={}){const{wrapper:t}={...(0,d.a)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}}}]);