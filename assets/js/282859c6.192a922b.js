"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[4857],{3933:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>f,frontMatter:()=>s,metadata:()=>d,toc:()=>u});var o=i(7458),t=i(7996),a=i(5207);const s={title:"Obfuscation",pagination_label:"Runtime Config Guide: Obfuscation",pagination_next:"runtime-config/guide-ssr",pagination_prev:"runtime-config/getting-started",sidebar_label:"Obfuscation",slug:"/runtime-config/guides/obfuscation"},c="Obfuscation",d={id:"runtime-config/guide-obfuscation",title:"Obfuscation",description:"The Runtime Config bundles all of your environment config-sets into your build, which",source:"@site/docs/runtime-config/guide-obfuscation.mdx",sourceDirName:"runtime-config",slug:"/runtime-config/guides/obfuscation",permalink:"/spa-tools/runtime-config/guides/obfuscation",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Obfuscation",pagination_label:"Runtime Config Guide: Obfuscation",pagination_next:"runtime-config/guide-ssr",pagination_prev:"runtime-config/getting-started",sidebar_label:"Obfuscation",slug:"/runtime-config/guides/obfuscation"},sidebar:"docs",previous:{title:"Runtime Config: Getting Started",permalink:"/spa-tools/runtime-config"},next:{title:"Runtime Config Guide: SSR",permalink:"/spa-tools/runtime-config/guides/ssr"}},l={},u=[{value:"Leakage mitigation",id:"leakage-mitigation",level:3},{value:"Is the obfuscation feature 100% secure?",id:"is-the-obfuscation-feature-100-secure",level:3},{value:"So should I obfuscate my config?",id:"so-should-i-obfuscate-my-config",level:3},{value:"@ Run-time in your SPA",id:"-run-time-in-your-spa",level:2},{value:"Using a static, obfuscated config-file",id:"using-a-static-obfuscated-config-file",level:3},{value:"@ Build-time via NodeJS",id:"-build-time-via-nodejs",level:2},{value:"Obfuscating a domain-config",id:"obfuscating-a-domain-config",level:3},{value:"Deobfuscating a domain-config",id:"deobfuscating-a-domain-config",level:3},{value:"Exporting a domain-config",id:"exporting-a-domain-config",level:3},{value:"@ Build-time via CLI",id:"-build-time-via-cli",level:2},{value:"Obfuscating a domain-config file",id:"obfuscating-a-domain-config-file",level:3},{value:"Deobfuscating a domain-config file",id:"deobfuscating-a-domain-config-file",level:3}];function r(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.D_,{packageName:"@spa-tools/runtime-config"}),"\n",(0,o.jsx)(n.h1,{id:"obfuscation",children:"Obfuscation"}),"\n",(0,o.jsx)(n.p,{children:"The Runtime Config bundles all of your environment config-sets into your build, which\nhas an advantage over other .env approaches of keeping your transipiled bits unchanged and\nthe same between build environments. However, a potential downside to this is that all\nenvironment configs get leaked to every environment you deploy to."}),"\n",(0,o.jsx)(n.h3,{id:"leakage-mitigation",children:"Leakage mitigation"}),"\n",(0,o.jsx)(n.p,{children:"Of course the optimal, secure solution to address this leakage concern is to protect your\nnon-prod, lower API environments via VPC, VPN, WAF, etc., which is the best guidance any security-minded\nprofessional could give on the topic."}),"\n",(0,o.jsxs)(n.p,{children:["Nonetheless, the Runtime Config provides a means to\n",(0,o.jsx)(n.em,{children:"softly"})," address this concern via an obfuscation utility that accepts an encoded config\nand outputs it as an encrypted static asset. This encrypted ",(0,o.jsx)(n.em,{children:"asset"})," can then be used\nto initialize the Runtime Config, which in turn will be automatically decrypted+decoded\nat runtime."]}),"\n",(0,o.jsx)(n.h3,{id:"is-the-obfuscation-feature-100-secure",children:"Is the obfuscation feature 100% secure?"}),"\n",(0,o.jsxs)(n.p,{children:['While the encryption algo used is very strong (256-bit), the answer still has to be "NO".\nAny serious hacker could eventually figure out how to decrypt your config. But it does add\na layer of "obfuscation" that makes it more difficult for a casual hacker to access your\nenvironment configs. ',(0,o.jsx)(n.strong,{children:"AND since you should NEVER include anything truly private in your SPA\nbuild"}),", it shouldn't be worth a hacker's time to do so. Moverover, it makes your config\nunfriendly to the human eye, thus mitigating a curious search for raw endpoint URLs in the\nbundled source code."]}),"\n",(0,o.jsx)(n.h3,{id:"so-should-i-obfuscate-my-config",children:"So should I obfuscate my config?"}),"\n",(0,o.jsx)(n.p,{children:"At the end of the day, it's really up to you but for guidance sake..."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"If your lower API environments are locked down, then obfuscation would be overkill and frankly an unwarranted\neffort/maintenance tax"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Likewise, if your lower API environments are wide-open BUT leaking non-active environment\nconfig is NOT a big deal to you, then by all means keep it simple and forego"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"However, if you do care AND your lower API environments are all public and wide-open,\nthen it's seriously a good idea to obfuscate your config-sets"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"-run-time-in-your-spa",children:"@ Run-time in your SPA"}),"\n",(0,o.jsx)(n.h3,{id:"using-a-static-obfuscated-config-file",children:"Using a static, obfuscated config-file"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"// depending on your build setup, you may need to import the file differently\nimport obfuscatedConfigStr from './myapp-config-obf.txt?raw';\n\n// let's initialize a new runtime config straight from the obfuscated string\nconst myAppRuntimeConfig = await RuntimeConfig.initializeObf(obfuscatedConfigStr);\n\nconsole.log('The config settings are automatically deobfuscated:');\nconsole.log(myAppRuntimeConfig.settings);\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-build-time-via-nodejs",children:"@ Build-time via NodeJS"}),"\n",(0,o.jsx)(n.h3,{id:"obfuscating-a-domain-config",children:"Obfuscating a domain-config"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { nodejsObfuscateConfig } from '@spa-tools/runtime-config';\n// let's assume we've already created a domain-config in code\n// that we're importing here (see Getting Started for more info)\nimport { myAppConfigSet } from './myapp-config';\n\n// here simply we pass in our domain-config along with an output filepath\nconst obfuscatedConfig = nodejsObfuscateConfig(myAppConfigSet, 'obfuscated-config.txt');\n// the obfuscated domain-config has now been saved to the file system\nconsole.log('Here is the obfuscated string:');\nconsole.log(obfuscatedConfig);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"deobfuscating-a-domain-config",children:"Deobfuscating a domain-config"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { nodejsDeobfuscateConfig } from '@spa-tools/runtime-config';\n\nconst deobfuscatedConfig = nodejsDeobfuscateConfig(obfuscatedConfig, 'deobfuscated-config.txt');\n// the deobfuscated domain-config has now been saved to the file system\nconsole.log('Here is the deobfuscated string:');\nconsole.log(deobfuscatedConfig);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"exporting-a-domain-config",children:"Exporting a domain-config"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { nodejsExportConfig } from '@spa-tools/runtime-config';\n\n// here simply we pass in our domain-config along with an output filepath\nnodejsExportConfig(myAppConfigSet, 'myapp-config.json');\n// the domain-config has now been saved to the file system (unobfuscated)\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-build-time-via-cli",children:"@ Build-time via CLI"}),"\n",(0,o.jsx)(n.h3,{id:"obfuscating-a-domain-config-file",children:"Obfuscating a domain-config file"}),"\n",(0,o.jsxs)(n.p,{children:["Call the obfuscate command with the ",(0,o.jsx)(n.code,{children:"@spa-tools/runtime-config-obf"})," utility using\nthe domain-config input file path and the obfuscated output file path."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"@spa-tools/runtime-config-obf obfuscate myapp-config.json myapp-config-obf.txt\n"})}),"\n",(0,o.jsx)(n.h3,{id:"deobfuscating-a-domain-config-file",children:"Deobfuscating a domain-config file"}),"\n",(0,o.jsxs)(n.p,{children:["If by remote chance you lose your domain-config file and all you have is the obfuscated\nfile, you can call the deobfuscate command with the ",(0,o.jsx)(n.code,{children:"@spa-tools/runtime-config-obf"}),"\nutility to recreate it."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"@spa-tools/runtime-config-obf deobfuscate myapp-config-obf.txt myapp-config.json\n"})})]})}function f(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}}}]);