"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[8984],{8348:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=t(7458),s=t(7996),l=t(5207);const a={title:"inlineSwitch",pagination_label:"Conditional Utilities: inlineSwitch",pagination_next:"utilities/conditionals/is-future",pagination_prev:"utilities/conditionals/are-dates-equal",sidebar_label:"inlineSwitch",slug:"/utilities/conditionals/inline-switch"},c="inlineSwitch()",o={id:"utilities/conditionals/inline-switch",title:"inlineSwitch",description:"The inlineSwitch() function mimics a switch statement, but what makes is special is that",source:"@site/docs/utilities/conditionals/inline-switch.mdx",sourceDirName:"utilities/conditionals",slug:"/utilities/conditionals/inline-switch",permalink:"/spa-tools/utilities/conditionals/inline-switch",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"inlineSwitch",pagination_label:"Conditional Utilities: inlineSwitch",pagination_next:"utilities/conditionals/is-future",pagination_prev:"utilities/conditionals/are-dates-equal",sidebar_label:"inlineSwitch",slug:"/utilities/conditionals/inline-switch"},sidebar:"docs",previous:{title:"Conditional Utilities: areDatesEqual",permalink:"/spa-tools/utilities/conditionals/are-dates-equal"},next:{title:"Conditional Utilities: isFuture",permalink:"/spa-tools/utilities/conditionals/is-future"}},r={},d=[{value:"Usage",id:"usage",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3}];function h(e){const i={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(l.D_,{packageName:"@spa-tools/utilities"}),"\n",(0,n.jsx)(i.h1,{id:"inlineswitch",children:"inlineSwitch()"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"inlineSwitch<K, V>()"})," function mimics a switch statement, but what makes is special is that\nit can be passed inline to other functions as an argument. This usage really shines in React\nfunction components where you can use it to conditionally render JSX elements."]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["The generic ",(0,n.jsx)(i.code,{children:"K"})," type is used to define the key type of the switch statement."]}),"\n",(0,n.jsxs)(i.li,{children:["The generic ",(0,n.jsx)(i.code,{children:"V"})," type is used to define the value type of the switch statement."]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-tsx",children:"import { useState } from 'react';\nimport { inlineSwitch } from '@spa-tools/utilities';\n\n// simple example that demos how a single console.log\n// call can control flow of multiple outputs\nconst respStatus = 404;\nconsole.log(\n  inlineSwitch<number, string>(respStatus, {\n    200: 'Yay, call succeeded :-)',\n    404: 'Hmmm, item not found :-/',\n    500: 'Ouch, something went bang :-(',\n  })\n);\n\n// a more poignant example for inlineSwitch is a\n// React function component\nfunction InlineSwitchExample() {\n  const [activeTab, setActiveTab] = useState(2);\n\n  return (\n    <Tabs onTabChange={setActiveTab}>\n      {inlineSwitch<number, JSX.Element>(activeTab, {\n        1: <Tab value={1}>Tab1</Tab>,\n        2: <Tab value={2}>Tab2</Tab>,\n        3: <Tab value={3}>Tab3</Tab>,\n      })}\n    </Tabs>\n  );\n}\n"})}),"\n",(0,n.jsx)(i.h3,{id:"arguments",children:"Arguments"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Name"}),(0,n.jsx)(i.th,{children:"Type"}),(0,n.jsx)(i.th,{children:"Description"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"key"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"K"})}),(0,n.jsx)(i.td,{children:"The key value to match against the switch statement."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"caseObject"})}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"Record<K, V>"})}),(0,n.jsx)(i.td,{children:"An object that maps keys to values for the switch cases. Each key is a case to match against the runtime provided value."})]})]})]}),"\n",(0,n.jsx)(i.h3,{id:"returns",children:"Returns"}),"\n",(0,n.jsxs)(i.p,{children:["The matched value of type ",(0,n.jsx)(i.code,{children:"V"}),"."]})]})}function u(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);