"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[153],{2489:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var i=s(7458),r=s(7996),n=s(5207);const l={title:"ensureStr",pagination_label:"String Utilities: ensureStr",pagination_next:"utilities/strings/format-proper-case",pagination_prev:"utilities/strings/capitalize-first-word",sidebar_label:"ensureStr",slug:"/utilities/strings/ensure-str"},a="ensureStr()",d={id:"utilities/strings/ensure-str",title:"ensureStr",description:"The ensureStr() function checks if the given value is a valid string",source:"@site/docs/utilities/strings/ensure-str.mdx",sourceDirName:"utilities/strings",slug:"/utilities/strings/ensure-str",permalink:"/spa-tools/utilities/strings/ensure-str",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"ensureStr",pagination_label:"String Utilities: ensureStr",pagination_next:"utilities/strings/format-proper-case",pagination_prev:"utilities/strings/capitalize-first-word",sidebar_label:"ensureStr",slug:"/utilities/strings/ensure-str"},sidebar:"docs",previous:{title:"String Utilities: capitalizeFirstWord",permalink:"/spa-tools/utilities/strings/capitalize-first-word"},next:{title:"String Utilities: formatProperCase",permalink:"/spa-tools/utilities/strings/format-proper-case"}},o={},c=[{value:"Usage",id:"usage",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3}];function u(e){const t={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.D_,{packageName:"@spa-tools/utilities"}),"\n",(0,i.jsx)(t.h1,{id:"ensurestr",children:"ensureStr()"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"ensureStr<F>()"})," function checks if the given value is a valid string\nand if so returns it; otherwise, returns fallback value."]}),"\n",(0,i.jsxs)(t.p,{children:["The generic ",(0,i.jsx)(t.code,{children:"F"})," type is used to define the type of the fallback value."]}),"\n",(0,i.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"import { ensureStr } from '@spa-tools/utilities';\n\nconst val1 = ensureStr('Hello, World!');\nconsole.log(val1);\n// --\x3e 'Hello, World!'\n\nconst val2 = ensureStr(123, 'not a string');\nconsole.log(val2);\n// --\x3e 'not a string'\n"})}),"\n",(0,i.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"str"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"unknown"})}),(0,i.jsx)(t.td,{children:"The value to check"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"fallback"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"F"})}),(0,i.jsxs)(t.td,{children:["The value that will be returned if ",(0,i.jsx)(t.code,{children:"value"})," is not a ",(0,i.jsx)(t.code,{children:"string"})]})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(t.p,{children:["Returns value if it is a ",(0,i.jsx)(t.code,{children:"string"})," else returns the fallback value of type ",(0,i.jsx)(t.code,{children:"F"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);