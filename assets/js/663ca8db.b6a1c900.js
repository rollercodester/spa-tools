"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[2567],{8119:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>h,contentTitle:()=>d,default:()=>o,frontMatter:()=>l,metadata:()=>a,toc:()=>u});var s=n(7458),t=n(7996),r=n(5207);const l={title:"humanizeUnit",pagination_label:"Number Utilities: humanizeUnit",pagination_next:"utilities/numbers/round-to-nearest",pagination_prev:"utilities/numbers/humanize-ms",sidebar_label:"humanizeUnit",slug:"/utilities/numbers/humanize-unit"},d="humanizeUnit()",a={id:"utilities/numbers/humanize-unit",title:"humanizeUnit",description:"The humanizeUnit() function humanizes a number utilizing a square-basis unit, returning a",source:"@site/docs/utilities/numbers/humanize-unit.mdx",sourceDirName:"utilities/numbers",slug:"/utilities/numbers/humanize-unit",permalink:"/spa-tools/utilities/numbers/humanize-unit",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"humanizeUnit",pagination_label:"Number Utilities: humanizeUnit",pagination_next:"utilities/numbers/round-to-nearest",pagination_prev:"utilities/numbers/humanize-ms",sidebar_label:"humanizeUnit",slug:"/utilities/numbers/humanize-unit"},sidebar:"docs",previous:{title:"Number Utilities: humanizeMs",permalink:"/spa-tools/utilities/numbers/humanize-ms"},next:{title:"Number Utilities: roundToNearest",permalink:"/spa-tools/utilities/numbers/round-to-nearest"}},h={},u=[{value:"Usage",id:"usage",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"HumanizeUnitOptions",id:"humanizeunitoptions",level:2},{value:"Properties",id:"properties",level:3}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.D_,{packageName:"@spa-tools/utilities"}),"\n",(0,s.jsx)(i.h1,{id:"humanizeunit",children:"humanizeUnit()"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"humanizeUnit()"})," function humanizes a number utilizing a square-basis unit, returning a\ntuple of formatted number with requested decimal places in first position and then respective\nhuman-readable unit in second position."]}),"\n",(0,s.jsxs)(i.p,{children:["By default, it will use the following units: ",(0,s.jsx)(i.code,{children:"K"}),", ",(0,s.jsx)(i.code,{children:"M"}),", ",(0,s.jsx)(i.code,{children:"B"}),", ",(0,s.jsx)(i.code,{children:"T"})," and a basis of ",(0,s.jsx)(i.code,{children:"1000"})," with one\ndecimal place, respectively representing ",(0,s.jsx)(i.code,{children:"thousand"}),", ",(0,s.jsx)(i.code,{children:"million"}),", ",(0,s.jsx)(i.code,{children:"billion"})," and ",(0,s.jsx)(i.code,{children:"trillion"}),"."]}),"\n",(0,s.jsx)(i.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:"import { humanizeUnit } from '@spa-tools/utilities';\n\nconst humanizeUnit1 = humanizeUnit(1000000);\nconsole.log(humanizeUnit1);\n// --\x3e ['1.00', 'M']\n\nconst humanizeUnit2 = humanizeUnit(1234567, { basis: 1024, decimalPlaces: 2, units: ['KB', 'MB', 'GB', 'TB'] });\nconsole.log(humanizeUnit2);\n// --\x3e ['1.18', 'MB']\n\nconst humanizeUnit3 = humanizeUnit(1234567, {\n  basis: 1024,\n  decimalPlaces: 1,\n  units: ['KB', 'MB', 'GB', 'TB'],\n  useGrouping: false,\n});\nconsole.log(humanizeUnit3);\n// --\x3e ['1.2', 'MB']\n\nconst humanizeUnit4 = humanizeUnit(824, {\n  basis: 10,\n  decimalPlaces: 1,\n  units: ['decades', 'centuries', 'millennium', 'megayears', 'gigayears'],\n  useGrouping: false,\n});\nconsole.log(humanizeUnit4);\n// --\x3e ['8.2', 'centuries']\n"})}),"\n",(0,s.jsx)(i.h3,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Name"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Required?"}),(0,s.jsx)(i.th,{children:"Default"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"dividend"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"yes"}),(0,s.jsx)(i.td,{children:"-"}),(0,s.jsx)(i.td,{children:"The dividend to use calculate the unit"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"options"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.a,{href:"#humanizeunitoptions",children:(0,s.jsx)(i.code,{children:"HumanizeUnitOptions"})})}),(0,s.jsx)(i.td,{children:"no"}),(0,s.jsxs)(i.td,{children:["see ",(0,s.jsx)(i.a,{href:"#humanizeunitoptions",children:(0,s.jsx)(i.code,{children:"HumanizeUnitOptions"})})]}),(0,s.jsx)(i.td,{children:"The options for formatting the unit"})]})]})]}),"\n",(0,s.jsx)(i.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(i.p,{children:["Returns humanized value as ",(0,s.jsx)(i.code,{children:"string"}),"."]}),"\n",(0,s.jsx)(i.h2,{id:"humanizeunitoptions",children:"HumanizeUnitOptions"}),"\n",(0,s.jsxs)(i.p,{children:["The options object for the ",(0,s.jsx)(i.code,{children:"humanizeUnit()"})," function."]}),"\n",(0,s.jsx)(i.h3,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Name"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Required?"}),(0,s.jsx)(i.th,{children:"Default"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"basis"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"false"}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"1000"})}),(0,s.jsx)(i.td,{children:"The basis to use to calculate the unit"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"decimalPlaces"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"number"})}),(0,s.jsx)(i.td,{children:"false"}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"0"})}),(0,s.jsx)(i.td,{children:"The number of decimal places to round to"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"units"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string[]"})}),(0,s.jsx)(i.td,{children:"false"}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"['K', 'M', 'B', 'T']"})}),(0,s.jsx)(i.td,{children:"The square-based units to use"})]})]})]})]})}function o(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);