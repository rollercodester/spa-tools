"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[8517],{6857:(t,s,e)=>{e.r(s),e.d(s,{assets:()=>o,contentTitle:()=>n,default:()=>p,frontMatter:()=>d,metadata:()=>l,toc:()=>h});var r=e(7458),a=e(7996),i=e(5207);const d={title:"addForwardSlash",pagination_label:"URL Utilities: addForwardSlash",pagination_next:"utilities/urls/interpolate-url",pagination_prev:"utilities/type-helpers/inline-switch",sidebar_label:"addForwardSlash",slug:"/utilities/urls/add-forward-slash"},n="addForwardSlash()",l={id:"utilities/urls/add-forward-slash",title:"addForwardSlash",description:"The addForwardSlash() function simply adds a forward slash to a string (if not already present) at the start, end, or both.",source:"@site/docs/utilities/urls/add-forward-slash.mdx",sourceDirName:"utilities/urls",slug:"/utilities/urls/add-forward-slash",permalink:"/spa-tools/utilities/urls/add-forward-slash",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"addForwardSlash",pagination_label:"URL Utilities: addForwardSlash",pagination_next:"utilities/urls/interpolate-url",pagination_prev:"utilities/type-helpers/inline-switch",sidebar_label:"addForwardSlash",slug:"/utilities/urls/add-forward-slash"},sidebar:"docs",previous:{title:"Type Helpers: inlineSwitch",permalink:"/spa-tools/utilities/type-helpers/inline-switch"},next:{title:"URL Utilities: interpolateUrl",permalink:"/spa-tools/utilities/urls/interpolate-url"}},o={},h=[{value:"Usage",id:"usage",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3}];function c(t){const s={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.D_,{packageName:"@spa-tools/utilities"}),"\n",(0,r.jsx)(s.h1,{id:"addforwardslash",children:"addForwardSlash()"}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"addForwardSlash()"})," function simply adds a forward slash to a string (if not already present) at the start, end, or both."]}),"\n",(0,r.jsx)(s.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"import { addForwardSlash } from '@spa-tools/utilities';\n\nconst str1 = '/path/to/something';\nconst path1 = addForwardSlash(str1);\n// --\x3e '/path/to/something/'\n\nconst str2 = 'path/to/something';\nconst path2 = addForwardSlash(str2, 'start');\n// --\x3e '/path/to/something'\n\nconst str3 = 'path/to/something';\nconst path3 = addForwardSlash(str3, 'end');\n// --\x3e 'path/to/something/'\n\nconst str4 = 'path/to/something';\nconst path4 = addForwardSlash(str4, 'both');\n// --\x3e '/path/to/something/'\n"})}),"\n",(0,r.jsx)(s.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Required?"}),(0,r.jsx)(s.th,{children:"Default"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"str"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"string"})}),(0,r.jsx)(s.td,{children:"yes"}),(0,r.jsx)(s.td,{children:"-"}),(0,r.jsx)(s.td,{children:"The value to add forward slash to"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"placement"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"'start' | 'end' | 'both'"})}),(0,r.jsx)(s.td,{children:"no"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"'end'"})}),(0,r.jsx)(s.td,{children:"The placement for the forward slash"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(s.p,{children:["Returns a ",(0,r.jsx)(s.code,{children:"string"}),"."]})]})}function p(t={}){const{wrapper:s}={...(0,a.a)(),...t.components};return s?(0,r.jsx)(s,{...t,children:(0,r.jsx)(c,{...t})}):c(t)}}}]);