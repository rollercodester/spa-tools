"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[5615],{8026:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>n,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var d=i(7458),s=i(7996),a=i(5207);const l={title:"downloadCsvFile",pagination_label:"Data Utilities: downloadCsvFile",pagination_next:"utilities/data/download-file",pagination_prev:"utilities/data/deep-merge",sidebar_label:"downloadCsvFile",slug:"/utilities/data/download-csv-file"},n="downloadCsvFile()",o={id:"utilities/data/download-csv-file",title:"downloadCsvFile",description:"The downloadCsvFile() does just what it sounds like: it takes CSV data and",source:"@site/docs/utilities/data/download-csv-file.mdx",sourceDirName:"utilities/data",slug:"/utilities/data/download-csv-file",permalink:"/spa-tools/utilities/data/download-csv-file",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"downloadCsvFile",pagination_label:"Data Utilities: downloadCsvFile",pagination_next:"utilities/data/download-file",pagination_prev:"utilities/data/deep-merge",sidebar_label:"downloadCsvFile",slug:"/utilities/data/download-csv-file"},sidebar:"docs",previous:{title:"Data Utilities: deepMerge",permalink:"/spa-tools/utilities/data/deep-merge"},next:{title:"Data Utilities: downloadFile",permalink:"/spa-tools/utilities/data/download-file"}},r={},c=[{value:"Usage",id:"usage",level:3},{value:"Arguments",id:"arguments",level:3}];function h(e){const t={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(a.D_,{packageName:"@spa-tools/utilities"}),"\n",(0,d.jsx)(t.h1,{id:"downloadcsvfile",children:"downloadCsvFile()"}),"\n",(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"downloadCsvFile()"})," does just what it sounds like: it takes CSV data and\ndownloads it as a file from within the user's browser. This function is super\nuseful when you want to provide a quick and easy CSV export feature from you\nSPA (e.g. from a data table being viewed)."]}),"\n",(0,d.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-ts",children:"import { downloadCsvFile } from '@spa-tools/utilities';\n\nconst data = [\n  { name: 'John Doe', age: 30, city: 'New York' },\n  { name: 'Jane Doe', age: 25, city: 'Los Angeles' },\n  { name: 'Jim Doe', age: 35, city: 'Chicago' },\n];\n\ndownloadCsvFile(data, 'people.csv', ['Name', 'Age', 'City']);\n"})}),"\n",(0,d.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Name"}),(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Required?"}),(0,d.jsx)(t.th,{children:"Default"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"csvData"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"string[]"})}),(0,d.jsx)(t.td,{children:"Yes"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"The data to be exported to CSV"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"fileName"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"string"})}),(0,d.jsx)(t.td,{children:"Yes"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"The name to be used for the downloaded file"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"columnNames"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"string[]"})}),(0,d.jsx)(t.td,{children:"No"}),(0,d.jsx)(t.td,{children:"-"}),(0,d.jsx)(t.td,{children:"The column names (i.e. header) to be used as first row in the CSV file. If omitted, no header will be included."})]})]})]})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}}}]);