"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[5482],{71:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>a});var t=i(7458),s=i(7996),l=i(5207);const r={title:"React Hook Reference",pagination_label:"API Client: React Reference",pagination_next:"core-router/getting-started",pagination_prev:"api-client/reference-vanilla",sidebar_label:"React",slug:"/api-client/reference/react"},c="React Hook Reference",o={id:"api-client/reference-react",title:"React Hook Reference",description:"If you're fetching data in a React based SPA, then boy do we have an awesome hook for you! But if it's not to your liking, then creating your own using the callEndpoint function is a breeze.",source:"@site/docs/api-client/reference-react.mdx",sourceDirName:"api-client",slug:"/api-client/reference/react",permalink:"/spa-tools/api-client/reference/react",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"React Hook Reference",pagination_label:"API Client: React Reference",pagination_next:"core-router/getting-started",pagination_prev:"api-client/reference-vanilla",sidebar_label:"React",slug:"/api-client/reference/react"},sidebar:"docs",previous:{title:"API Client: Vanilla Reference",permalink:"/spa-tools/api-client/reference/vanilla"},next:{title:"Core Router: Getting Started",permalink:"/spa-tools/core-router"}},d={},a=[{value:"useCallEndpoint()",id:"usecallendpoint",level:2},{value:"Usage",id:"usage",level:3},{value:"Generics",id:"generics",level:3},{value:"Method overloads",id:"method-overloads",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"UseCallEndpointTuple",id:"usecallendpointtuple",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.D_,{packageName:"@spa-tools/api-client"}),"\n",(0,t.jsx)(n.h1,{id:"react-hook-reference",children:"React Hook Reference"}),"\n",(0,t.jsxs)(n.p,{children:["If you're fetching data in a React based SPA, then boy do we have an awesome hook for you! But if it's not to your liking, then creating your own using the ",(0,t.jsx)(n.a,{href:"/spa-tools/api-client/reference/vanilla#callendpoint",children:(0,t.jsx)(n.code,{children:"callEndpoint"})})," function is a breeze."]}),"\n",(0,t.jsx)(n.p,{children:"This reference uses Typescript syntax but works for Javascript as well (simply ignore all type usage)."}),"\n",(0,t.jsx)(n.h2,{id:"usecallendpoint",children:"useCallEndpoint()"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useCallEndpoint<D, E, S>"})," hook wraps the ",(0,t.jsx)(n.a,{href:"/spa-tools/api-client/reference/vanilla#callendpoint",children:(0,t.jsx)(n.code,{children:"callEndpoint"})})," function to provide a sweet React dev experience for fetching API data right where you need it most (directly within your function components)."]}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import { useEffect } from 'react';\nimport { useCallEndpoint } from '@spa-tools/api-client';\n\nfunction LoadRecipes() {\n  const [loadRecipes, recipesResult, areRecipesLoading, clearRecipes] = useCallEndpoint(\n    'https://dummyjson.com/recipes',\n    {\n      serverModelOptions: { jsonDataDotPath: 'recipes' },\n    }\n  );\n\n  useEffect(() => {\n    if (recipesResult?.data && !areRecipesLoading) {\n      console.log(`loadRecipes call completed:`);\n      console.log(recipesResult.data);\n    } else if (recipesResult?.error) {\n      console.error(`loadRecipes call errored:`);\n      console.error(recipesResult.error);\n    }\n  }, [areRecipesLoading, recipesResult]);\n\n  return (\n    <div>\n      <h1>Recipes</h1>\n      <div>\n        <button disabled={recipesResult?.data?.length} onClick={loadRecipes}>\n          Load Recipes\n        </button>\n        <button disabled={!!recipesResult?.data?.length} onClick={clearRecipes}>\n          Clear Recipes\n        </button>\n      </div>\n      <div>\n        {areRecipesLoading ? (\n          <div>Loading recipes...</div>\n        ) : (\n          <ul>{recipesResult?.data?.map((recipe) => <li key={recipe.id}>{recipe.name}</li>)}</ul>\n        )}\n      </div>\n    </div>\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"generics",children:"Generics"}),"\n",(0,t.jsxs)(n.p,{children:["There are three generic types that can be included when calling ",(0,t.jsx)(n.code,{children:"useCallEndpoint"})," in the following order:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"D"})," is used to define the shape of the result data returned from the endpoint"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"E"})," is used to define the shape of the error data returned from the endpoint"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"S"})," is used to define the shape of the state passed to the endpoint for interpolation"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"method-overloads",children:"Method overloads"}),"\n",(0,t.jsxs)(n.p,{children:["There are six method signature overloads for ",(0,t.jsx)(n.code,{children:"useCallEndpoint"})," that can be used to setup the hook to make call execution succinct, flexible, and comprehensive:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"useCallEndpoint<D, E, S>(url)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"useCallEndpoint<D, E, S>(url, options)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"useCallEndpoint<D, E, S>(url, appendData)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"useCallEndpoint<D, E, S>(url, options, appendData)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"useCallEndpoint<D, E, S>(options)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"useCallEndpoint<D, E, S>(options, appendData)"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"url"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:"The URL of the endpoint to be called"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"options"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"EndpointOptions"})}),(0,t.jsx)(n.td,{children:"An object that can be used to configure the request"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"appendData"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsxs)("p",{children:["When set to ",(0,t.jsx)(n.code,{children:"true"}),", appends data from successive GET execution calls for an endpoint that supports pagination"]}),' This is useful in UX scenarios such as "load more", "infinite scroll", etc.']})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:["Returns a ",(0,t.jsx)(n.a,{href:"#usecallendpointtuple",children:(0,t.jsx)(n.code,{children:"UseCallEndpointTuple"})}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"usecallendpointtuple",children:"UseCallEndpointTuple"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"UseCallEndpointTuple"})," tuple const is returned from the ",(0,t.jsx)(n.a,{href:"#usecallendpoint",children:(0,t.jsx)(n.code,{children:"useCallEndpoint"})})," hook and contains the following elements:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"execute"})," - A function that when called asynchronously executes the endpoint request"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"execute"})," function can be called with optional parameters via following overrides:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["No params - ",(0,t.jsx)(n.code,{children:"execute()"})]}),"\n",(0,t.jsxs)(n.li,{children:["With just exec options - ",(0,t.jsx)(n.code,{children:"execute(options: Pick<EndpointOptions, 'body' | 'pageToken' | 'recordSkip' | 'signal'>)"})]}),"\n",(0,t.jsxs)(n.li,{children:["With just state - ",(0,t.jsx)(n.code,{children:"execute(state: S)"})]}),"\n",(0,t.jsxs)(n.li,{children:["With exec options and state - ",(0,t.jsx)(n.code,{children:"execute(options: Pick<EndpointOptions, 'body' | 'pageToken' | 'recordSkip' | 'signal'>, state: S)"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"result"})," - An ",(0,t.jsx)(n.a,{href:"/spa-tools/api-client/reference/vanilla#endpointresult",children:(0,t.jsx)(n.code,{children:"EndpointResult"})})," object that contains the result of the endpoint request"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"pending"})," - A boolean that indicates if the endpoint request is currently in progress"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"clear"})," - A function that when called clears the result of the endpoint request"]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);