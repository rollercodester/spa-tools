"use strict";(self.webpackChunk_spa_tools_website=self.webpackChunk_spa_tools_website||[]).push([[4055],{7468:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var s=i(7458),n=i(7996),a=i(5207);const l={title:"isPast",pagination_label:"Conditional Utilities: isPast",pagination_next:"utilities/conditionals/is-promise",pagination_prev:"utilities/conditionals/is-not-empty-record",sidebar_label:"isPast",slug:"/utilities/conditionals/is-past"},o="isPast()",r={id:"utilities/conditionals/is-past",title:"isPast",description:"The isPast() function checks if a date value equates to a date that is in the past.",source:"@site/docs/utilities/conditionals/is-past.mdx",sourceDirName:"utilities/conditionals",slug:"/utilities/conditionals/is-past",permalink:"/spa-tools/utilities/conditionals/is-past",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"isPast",pagination_label:"Conditional Utilities: isPast",pagination_next:"utilities/conditionals/is-promise",pagination_prev:"utilities/conditionals/is-not-empty-record",sidebar_label:"isPast",slug:"/utilities/conditionals/is-past"},sidebar:"docs",previous:{title:"Conditional Utilities: isNotEmptyRecord",permalink:"/spa-tools/utilities/conditionals/is-not-empty-record"},next:{title:"Conditional Utilities: isPromise",permalink:"/spa-tools/utilities/conditionals/is-promise"}},d={},c=[{value:"Usage",id:"usage",level:3},{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3}];function h(t){const e={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.D_,{packageName:"@spa-tools/utilities"}),"\n",(0,s.jsx)(e.h1,{id:"ispast",children:"isPast()"}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"isPast()"})," function checks if a date value equates to a date that is in the past."]}),"\n",(0,s.jsx)(e.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"import { isPast } from '@spa-tools/utilities';\n\nconst pastDate = new Date('2022-01-01');\nconsole.log(isPast(pastDate));\n// --\x3e true\n\nconsole.log(isPast('2080-12-31'));\n// --\x3e false\n"})}),"\n",(0,s.jsx)(e.h3,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Name"}),(0,s.jsx)(e.th,{children:"Type"}),(0,s.jsx)(e.th,{children:"Required?"}),(0,s.jsx)(e.th,{children:"Description"})]})}),(0,s.jsx)(e.tbody,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"date"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"string | number | Date"})}),(0,s.jsx)(e.td,{children:"yes"}),(0,s.jsx)(e.td,{children:"The date value to check as either date string, timestamp integer, or date object"})]})})]}),"\n",(0,s.jsx)(e.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"boolean"})," - If value of ",(0,s.jsx)(e.code,{children:"date"})," equates to a date in the past then returns ",(0,s.jsx)(e.code,{children:"true"})," else returns ",(0,s.jsx)(e.code,{children:"false"}),"."]})]})}function u(t={}){const{wrapper:e}={...(0,n.a)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(h,{...t})}):h(t)}}}]);